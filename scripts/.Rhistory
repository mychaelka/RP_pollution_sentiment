pos <- scaled %>%
group_by(day) %>%
summarize(RoBERTa = mean(roberta_positive),
BERTweet = mean(bertweet_positive),
VADER = mean(vader_compound)) %>%
melt(id.vars = "day") %>%
mutate(lag=lag(value)) %>%
mutate(diff=value-lag)
# negative
neg <- scaled %>%
group_by(day) %>%
summarize(RoBERTa = mean(roberta_negative),
BERTweet = mean(bertweet_negative)) %>%
melt(id.vars = "day") %>%
mutate(lag=lag(value)) %>%
mutate(diff=value-lag)
pos_plot <- pos %>%
mutate(day = factor(day, levels = c(0, 1, 2, 3, 4, 5, 6),
labels = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))) %>%
ggplot(aes(x=day, y=value, group=variable, col=variable)) +
geom_line(linewidth=1) +
geom_point(aes(shape=variable), size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray", linewidth=1.1) +
theme_bw() +
scale_color_manual(name='Model',
breaks=c('BERTweet', 'RoBERTa', 'VADER'),
values=c('RoBERTa' = '#E65164FF', 'BERTweet'='#1D1147FF', 'VADER'= '#FEC287FF')) +
theme(text=element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16)) +
guides(shape = "none") +
ggtitle("Positive") +
ylim(-0.1, 0.1) +
xlab(NULL) +
ylab("Mean standardized sentiment")
neg_plot <- neg %>%
mutate(day = factor(day, levels = c(0, 1, 2, 3, 4, 5, 6),
labels = c("Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"))) %>%
ggplot(aes(x=day, y=value, group=variable, col=variable)) +
geom_line(linewidth=1) +
geom_point(aes(shape=variable), size=3) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray", linewidth=1.1) +
theme_bw() +
scale_color_manual(name='Model',
breaks=c('BERTweet', 'RoBERTa'),
values=c('RoBERTa' = '#E65164FF', 'BERTweet'='#1D1147FF')) +
theme(text=element_text(size=20),
axis.text.x = element_text(size=16),
axis.text.y = element_text(size=16)) +
guides(shape = "none") +
ggtitle("Negative") +
ylim(-0.1, 0.1) +
xlab(NULL) +
ylab(NULL)
grid.arrange(pos_plot, neg_plot, nrow = 1, widths=c(1,1))
# regression coefficients and CI per pollution bin
rename_intervals <- function(df) {
df$name <- gsub("pm25_cat", "", df$name)
df <- df %>%
mutate(start = as.numeric(gsub("[^0-9,-]", "", sub(",.*", "", name))),
end = as.numeric(gsub("[^0-9,-]", "", sub(".*,", "", name)))) %>%
arrange(start, end) %>%
mutate(intervals = factor(name, levels = unique(name), ordered = TRUE)) %>%
dplyr::select(-start, -end)
return(df)
}
# model
a <- feols(
c(vader_compound, roberta_positive, roberta_negative, bertweet_positive, bertweet_negative) ~ pm25_cat + temp_med + I(temp_med^2) + precip + visibility + wind_strength | CNTY_UNIQUE + date,
data = grouped,
cluster = c("CNTY_UNIQUE", "date"),
weights = grouped$num_tweets
)
# vader
vader_coefs <- coef(a$`lhs: vader_compound`) %>% enframe() %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
vader_confint <- confint(a$`lhs: vader_compound`) %>% rownames_to_column(., "name") %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
interval_levels <- c("[0,5]", "(5,10]", "(10,15]", "(15,20]", "(20,25]", "(25,30]",
"(30,35]", "(35,40]", "(40,45]", "(45,50]", "(50,55]",
"(55,60]", "(60,65]", "(65,70]", "(70,Inf]")
# smoothed CIs
vader_coefs <- vader_coefs %>%
rename_intervals() %>%
inner_join(vader_confint %>% rename_intervals(), by = c("name", "intervals")) %>%
mutate(intervals = factor(intervals, levels = interval_levels)) %>%
mutate(intervals_numeric = as.numeric(factor(intervals, levels = interval_levels)))
baseline <- data.frame(
name = "[0,5]",
value = 0,
intervals = factor("[0,5]", levels = interval_levels, ordered = TRUE),
intervals_numeric = 0,
smooth_value = 0,
smooth_2.5 = 0,
smooth_97.5 = 0
)
baseline$`2.5 %` = 0
baseline$`97.5 %` = 0
vader_coefs <- bind_rows(baseline, vader_coefs)
vader_line_plot <- vader_coefs %>%
ggplot(aes(x = intervals, y = value, group = 1)) +
geom_point(color = "#1D1147FF", size=2) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`), color = "#1D1147FF", width = 0.5, size = 0.8) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black", linewidth=0.5) +
theme_bw() +
xlab(NULL) +
ylim(-1.1, 0.91) +
ylab("SD change in sentiment (VADER)") +
theme(text = element_text(size = 15),
axis.text.x = element_text(angle = 90))
hist_plot <- grouped %>%
ggplot(aes(x=pm25_cat)) +
geom_bar(color="black", fill="lightblue", alpha=0.5) +
theme_bw() +
xlab("Air pollution level (pm2.5)") +
ylab("Number of tweets") +
theme(text=element_text(size=15),
axis.text.x = element_text(angle = 90))
print(grid.arrange(vader_line_plot, hist_plot, ncol = 1, heights=c(3,1)))
# ROBERTA
roberta_pos_coefs <- coef(a$`lhs: roberta_positive`) %>% enframe() %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
roberta_pos_confint <- confint(a$`lhs: roberta_positive`) %>% rownames_to_column(., "name") %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
roberta_pos_coefs <- roberta_pos_coefs %>%
rename_intervals() %>%
inner_join(roberta_pos_confint %>% rename_intervals(), by = c("name", "intervals")) %>%
mutate(intervals = factor(intervals, levels = interval_levels)) %>%
mutate(intervals_numeric = as.numeric(factor(intervals, levels = interval_levels)))
roberta_neg_coefs <- coef(a$`lhs: roberta_negative`) %>% enframe() %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
roberta_neg_confint <- confint(a$`lhs: roberta_negative`) %>% rownames_to_column(., "name") %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
roberta_neg_coefs <- roberta_neg_coefs %>%
rename_intervals() %>%
inner_join(roberta_neg_confint %>% rename_intervals(), by = c("name", "intervals")) %>%
mutate(intervals = factor(intervals, levels = interval_levels)) %>%
mutate(intervals_numeric = as.numeric(factor(intervals, levels = interval_levels)))
roberta_pos_coefs <- bind_rows(baseline, roberta_pos_coefs)
roberta_neg_coefs <- bind_rows(baseline, roberta_neg_coefs)
roberta_line_plot <-
roberta_neg_coefs %>% ggplot(aes(x=intervals, y=value, group=1)) +
geom_point(aes(color='negative'), size=2) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`), color = "#E65164FF", width = 0.5, size = 0.8) +
theme_bw() +
xlab(NULL) +
ylim(-1.1, 0.91) +
ylab("SD change in sentiment (RoBERTa)") +
geom_point(data=roberta_pos_coefs, aes(x=intervals, y=value, group=1, col='positive'), size=2) +
geom_errorbar(data=roberta_pos_coefs, aes(ymin = `2.5 %`, ymax = `97.5 %`), color = "#1D1147FF", width = 0.5, size = 0.8) +
geom_hline(yintercept=0, linetype="dashed", color="black", linewidth=0.5) +
theme(text=element_text(size=15), legend.position = c(0.15, 0.10),
axis.text.x = element_text(angle = 90)) +
scale_color_manual(name='Sentiment polarity',
breaks=c('negative', 'positive'),
values=c('negative'='#E65164FF', 'positive'='#1D1147FF'))
grid.arrange(roberta_line_plot, hist_plot, ncol = 1, heights=c(3,1))
# BERTWEET
bertweet_pos_coefs <- coef(a$`lhs: bertweet_positive`) %>% enframe() %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
bertweet_pos_confint <- confint(a$`lhs: bertweet_positive`) %>% rownames_to_column(., "name") %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
bertweet_pos_coefs <- bertweet_pos_coefs %>%
rename_intervals() %>%
inner_join(bertweet_pos_confint %>% rename_intervals(), by = c("name", "intervals")) %>%
mutate(intervals = factor(intervals, levels = interval_levels)) %>%
mutate(intervals_numeric = as.numeric(factor(intervals, levels = interval_levels)))
bertweet_neg_coefs <- coef(a$`lhs: bertweet_negative`) %>% enframe() %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
bertweet_neg_confint <- confint(a$`lhs: bertweet_negative`) %>% rownames_to_column(., "name") %>%
filter(name != "temp_med" & name != "I(temp_med^2)" & name != "precip" & name != "visibility" & name != "wind_strength")
bertweet_neg_coefs <- bertweet_neg_coefs %>%
rename_intervals() %>%
inner_join(bertweet_neg_confint %>% rename_intervals(), by = c("name", "intervals")) %>%
mutate(intervals = factor(intervals, levels = interval_levels)) %>%
mutate(intervals_numeric = as.numeric(factor(intervals, levels = interval_levels)))
bertweet_pos_coefs <- bind_rows(baseline, bertweet_pos_coefs)
bertweet_neg_coefs <- bind_rows(baseline, bertweet_neg_coefs)
bertweet_line_plot <-
bertweet_neg_coefs %>% ggplot(aes(x=intervals, y=value, group=1)) +
geom_point(aes(color='negative'), size=2, shape=17) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`), color = "#E65164FF", width = 0.5, size = 0.8) +
theme_bw() +
xlab(NULL) +
ylim(-1.1, 0.91) +
ylab("SD change in sentiment (BERTweet)") +
geom_point(data=bertweet_pos_coefs, aes(x=intervals, y=value, group=1, col='positive'), size=2, shape=15) +
geom_errorbar(data=roberta_pos_coefs, aes(ymin = `2.5 %`, ymax = `97.5 %`), color = "#1D1147FF", width = 0.5, size = 0.8) +
geom_hline(yintercept=0, linetype="dashed", color="black", linewidth=0.5) +
theme(text=element_text(size=15), legend.position = c(0.15, 0.10),
axis.text.x = element_text(angle = 90)) +
scale_color_manual(name='Sentiment polarity',
breaks=c('negative', 'positive'),
values=c('negative'='#E65164FF', 'positive'='#1D1147FF'))
grid.arrange(bertweet_line_plot, hist_plot, ncol = 1, heights=c(3,1))
# pm25 vs. sentiment
data %>%
drop_na() %>%
filter(pm25 < 75) %>%
mutate(int_pm=round(pm25)) %>%
group_by(int_pm) %>%
summarize(vader = mean(vader_compound),
roberta_pos = mean(roberta_positive),
bertweet_pos = mean(bertweet_positive)) %>%
ggplot(aes(x=int_pm, y=roberta_pos)) +
geom_line()
#### MAPS
usa_counties <- st_read("../data/USA_shapefiles/counties/") |>
dplyr::select(NAME, STATE_NAME, POP2010) |>
filter(STATE_NAME != "Alaska") |>
filter(STATE_NAME != "Hawaii")
usa_counties <- usa_counties %>% mutate(CNTY_UNIQUE=paste(usa_counties$NAME, usa_counties$STATE_NAME))
# county-level aggregation
# we want mean because this is aggregated for the whole month, but in the models we use median
county_level <- data %>%
drop_na() %>%
group_by(CNTY_UNIQUE) %>%
summarise(num_tweets=n(),
mean_pollution=mean(pm25,
na.rm=TRUE),
median_pollution=median(pm25,
na.rm=TRUE),
max_pollution=max(pm25,
na.rm=TRUE),
mean_vader=mean(vader_compound,
na.rm=TRUE),
mean_roberta_pos=mean(roberta_positive,
na.rm=TRUE),
mean_roberta_neg=mean(roberta_negative,
na.rm=TRUE),
mean_bertweet_pos=mean(bertweet_positive,
na.rm=TRUE),
mean_bertweet_neg=mean(bertweet_negative,
na.rm=TRUE)) %>%
ungroup() %>%
left_join(usa_counties, .,
by=c("CNTY_UNIQUE" = "CNTY_UNIQUE")) %>%
mutate(tweets_pc=num_tweets/POP2010)
# how many US counties exceed the WHO limit for long-term exposure to pm2.5?
county_level %>%
st_transform(5070) %>%
filter(mean_pollution > 15) %>%
ggplot(aes(fill=mean_pollution)) +
geom_sf(lwd=0.05) +
theme_void() +
coord_sf(datum = NA)
# log 10 number of tweets per county
county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=log(num_tweets, base=10))) +
geom_sf(lwd=0.05) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="G",
direction=-1,
na.value = "white",
guide = guide_colourbar(order = 1,
title = "Tweets per county (log10)",
title.position = 'top')
) +
theme(
legend.direction = "horizontal",
legend.justification = c(0, 0),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 15),
legend.key.size = unit(1.5, 'cm')
)
# tweet distribution
usa_states <- st_read("../data/USA_shapefiles/States_shapefile/")
usa_states <- usa_states[-c(2,12),] %>%
dplyr::select(State_Code, State_Name)
gps_data <- data %>%
st_as_sf(coords=c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0") %>%
st_transform(5070)
usa_states %>%
st_transform(5070) %>%
ggplot() +
geom_sf() +
geom_sf(data=gps_data, color="#1D1147FF", alpha=0.2, size=0.2) +
coord_sf(datum=NA) +
theme_void()
# bots distribution
gps_data_bots <- all_bots %>%
st_as_sf(coords=c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0") %>%
st_transform(5070)
usa_states %>%
st_transform(5070) %>%
ggplot() +
geom_sf() +
geom_sf(data=gps_data_bots, color="#B63679FF", alpha=0.2, size=0.2) +
coord_sf(datum=NA) +
theme_void()
# mean Vader sentiment per county
county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=mean_vader)) +
geom_sf(lwd=0.2) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction = -1,
na.value = "grey",
guide = guide_colourbar(order = 1,
title = "VADER sentiment score",
title.position = 'top')
) +
theme(
text=element_text(size=15),
legend.direction = "horizontal",
legend.justification = c(0,0),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 15),
legend.key.size = unit(1.5, 'cm')
)
# mean roberta sentiment intensity per county
roberta_pos <- county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=mean_roberta_pos)) +
geom_sf(lwd=0.1) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction=-1,
na.value = "grey",
guide = guide_colourbar(order = 1,
title = "Sentiment probability",
title.position = 'top')
) +
theme(
text=element_text(size=15),
legend.direction = "horizontal",
legend.justification = c(0,0),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 15),
legend.key.size = unit(1.5, 'cm')
)
roberta_neg <- county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=mean_roberta_neg)) +
geom_sf(lwd=0.2) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction=-1,
na.value = "grey",
guide = guide_colourbar(title = "Sentiment probability",
title.position = 'top', alpha = 0)
) +
theme(
legend.direction = "horizontal",
legend.justification = c(0,0),
legend.box = "horizontal",
legend.position = "bottom",
legend.title = element_text(size = 15, color="white"),
legend.text = element_text(color="white"),
legend.key.size = unit(1, 'cm'),
legend.key = element_rect(color="white")
)
grid.arrange(roberta_pos, roberta_neg, nrow=1)
# mean bertweet sentiment intensity per county
bertweet_pos <- county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=mean_bertweet_pos)) +
geom_sf(lwd=0.1) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction=-1,
na.value = "grey",
guide = guide_colourbar(title = "Sentiment probability",
title.position = 'top')
) +
theme(
text=element_text(size=15),
legend.direction = "horizontal",
legend.justification = c(0,0),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 15),
legend.key.size = unit(1.5, 'cm')
)
bertweet_neg <- county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=mean_bertweet_neg)) +
geom_sf(lwd=0.1) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction=-1,
na.value = "grey",
guide = guide_colourbar(title = "Negative sentiment probability",
title.position = 'top', alpha = 0)
) +
theme(
legend.direction = "horizontal",
legend.justification = c(0,0),
legend.box = "horizontal",
legend.position = "bottom",
legend.title = element_text(size = 15, color="white"),
legend.text = element_text(color="white"),
legend.key.size = unit(1, 'cm'),
legend.key = element_rect(color="white")
)
grid.arrange(bertweet_pos, bertweet_neg, nrow=1)
#### POLLUTION
ecmwf <- read_stars("../data/ECMWF/ecmwf_july.nc")
library(stars)
#### POLLUTION
ecmwf <- read_stars("../data/ECMWF/ecmwf_july.nc")
pm25 <- st_as_sf(ecmwf[4]) %>% parse_nums() %>%
mutate(across(`2015-07-01`:`2015-07-31 21:00:00`, ~.*1000000000)) %>%
dplyr::mutate(
id = row_number()
)
#### POLLUTION
parse_nums <- function(df) {
res <- df %>% mutate(across(`2015-07-01`:`2015-07-31 21:00:00`, as.character)) %>%
mutate(across(`2015-07-01`:`2015-07-31 21:00:00`, parse_number))
res
}
pm25 <- st_as_sf(ecmwf[4]) %>% parse_nums() %>%
mutate(across(`2015-07-01`:`2015-07-31 21:00:00`, ~.*1000000000)) %>%
dplyr::mutate(
id = row_number()
)
rm(ecmwf)
gc()
# mean pollution by county
county_level %>%
st_transform(5070) %>%
ggplot(aes(fill=mean_pollution)) +
geom_sf(lwd=0.05) +
theme_void() +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction=-1,
na.value = "white",
guide = guide_colourbar(order = 1,
title = "Mean PM2.5 concentration (ug/m3)",
title.position = 'top')
) +
theme(
legend.direction = "horizontal",
legend.justification = c(0, 0),
legend.position = "bottom",
legend.box = "horizontal",
legend.title = element_text(size = 15),
legend.key.size = unit(1.5, 'cm')
)
ecmwf <- read_stars("../data/ECMWF/ecmwf_july.nc")
pm25 <- st_as_sf(ecmwf[4]) %>% parse_nums() %>%
mutate(across(`2015-07-01`:`2015-07-31 21:00:00`, ~.*1000000000)) %>%
dplyr::select(`2015-07-05`:`2015-07-07 21:00:00`) %>%
dplyr::mutate(
id = row_number()
) %>%
st_set_crs(st_crs(usa_states))
rm(ecmwf)
gc()
# intersection of usa shapefile and pollution grid data
sf_use_s2(FALSE)
pm25_df <- st_intersection(pm25, usa_counties) %>%
st_transform(5070)
# four plots of the cloud from Canada
cols <- names(pm25_df)[c(7,11,15,19)]
myplots <- vector('list', 4)
i = 1
for (col in cols) {
myplots[[i]] <- pm25_df %>% ggplot(aes(fill=.data[[col]])) +
geom_sf(lwd=0.01, col = "black") +
annotation_scale(location = 'bl') +
coord_sf(datum = NA) +
scale_fill_viridis_c(
option="magma",
direction = -1,
limits = c(0, 120),
breaks = seq(from=0, to=120, by = 30),
na.value = "black",
guide = guide_colourbar(order = 1,
title = "PM2.5 concentration (ug/m3)",
title.position = 'top')
)  +
theme_void() +
theme(
legend.position = "none", #c(0.25, 0.07),
legend.direction = "horizontal",
legend.justification = c("bottom"),
legend.box = "horizontal",
legend.box.just = "bottom",
legend.title = element_text(size = 16),
legend.key.size = unit(1.2, 'cm')
) +
labs(title = str_c(substr(col, 2, 12), " ", substr(col, 13, 17)))
i = i + 1
}
ggarrange(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]],
common.legend = TRUE, legend = "bottom")
library(ggpubr)
ggarrange(myplots[[1]], myplots[[2]], myplots[[3]], myplots[[4]],
common.legend = TRUE, legend = "bottom")
